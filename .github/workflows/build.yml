name: Build Application

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20.10.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Setup Python for node-gyp
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install Python distutils and other dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel

      - name: Install dependencies
        run: npm install
        
      - name: Install app dependencies
        run: |
          cd release/app
          npm install
          cd ../..

      - name: Set environment variables
        run: |
          echo "SUPA_PROJECT_ID=dummy_id" >> $GITHUB_ENV
          echo "SUPA_KEY=dummy_key" >> $GITHUB_ENV
          echo "AXIOM_TOKEN=dummy_token" >> $GITHUB_ENV
          echo "AXIOM_ORG_ID=dummy_org_id" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
        shell: bash

      - name: Platform-specific setup
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            echo "Setting up for macOS build"
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "Setting up for Linux build"
            sudo apt-get update
            sudo apt-get install -y libpng-dev libxext-dev libx11-dev libxcb1-dev
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "Setting up for Windows build"
          fi
        shell: bash

      - name: Clean build directories
        run: |
          rm -rf dist
          rm -rf release/build
        shell: bash

      - name: Build application (compile)
        run: npm run build
        
      - name: Package application
        run: |
          npx electron-builder build --publish never --${{ matrix.os == 'macos-latest' && 'mac' || matrix.os == 'windows-latest' && 'win' || 'linux' }}
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: release/build
          retention-days: 7
          if-no-files-found: warn
