name: Build Application

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20.10.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Setup Python for node-gyp
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install Python distutils and other dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel

      - name: Install dependencies
        run: npm ci

      - name: Set dummy environment variables
        run: |
          echo "SUPA_PROJECT_ID=dummy_id" >> $GITHUB_ENV
          echo "SUPA_KEY=dummy_key" >> $GITHUB_ENV
          echo "AXIOM_TOKEN=dummy_token" >> $GITHUB_ENV
          echo "AXIOM_ORG_ID=dummy_org_id" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
        shell: bash

      - name: Install electron-builder dependencies
        run: npm install -g electron-builder@24.13.3
        
      - name: Debug environment
        run: |
          python --version
          node --version
          npm --version
          echo "Which python: $(which python)"
          echo "Python packages:"
          pip list

      - name: Build application
        run: npm run package
        env:
          ELECTRON_BUILDER_ALLOW_MISSING_DEPS: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: release/build
          retention-days: 7
